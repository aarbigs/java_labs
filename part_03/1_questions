
Answer the following questions


1) What is an instance variable?
Data members of a class.

2) How do you create a new object?
using the "new" keyword

3) After creating a new object, how do you set that objects instance variables?
using the dot(.) operator

4) What is a reference variable? Why do you need to be careful with reference variables?
Variables that refer to the same thing. You need to be careful because they will both change even though they can have different names.

5) How many methods can you have in a class?
As many as memory will allow.

6) How do you exit a method at any point?
the return keyword.

7) What is the method signature required to return an "int" from a method?
int

8) Assuming "int num = 10", what is the syntax to return "num" from a method?
return num

9) How do you pass a parameter to a method?
'Parameters are essentially varaiables that receive the value of the arguments passed to the method when it is called'

10) What is the method signature for a method named sum() that takes two int parameters
    and returns their sum as in int?
public int sum(int x, int y){
    return x + y;
}
11) What is a constructor?
A construction initializes an object when it is created. It has the same name as the class and is syntactically similar to a method.
Constructors have no explicit return type. Typically, you use constructors to give inital value to instance variables defined by the class,
or to perform any other startup procedures required to create a fully formed object.

12) How does Java treat a class without a constructor?
Java automatically provided default constructors that initialize all member variables to their default values, which are zero, null and false
for numeric types, reference types, and booleans respectively.

13) What would the constructor for "public class Animal" look like?
Animal(){
}

14) What is the effect of passing parameters to a constructor?
Initialize an instance variable.

15) When should you pass parameters to a constructor?
To initialize an instance variable.

16) What does the finalize() method do?
Is called just before and object's final destruction by the garbage collector.

17) What does the "this" keyword do?
this is an alias or a name for a current instance variable.

18) When should you use the "this" keyword?
separating instance variables from local variables.

19) Write an example of the "this" keyword in action.
Power(double base, int exp){
    this.b = base;
    this.e = exp;
    }